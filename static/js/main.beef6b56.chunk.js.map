{"version":3,"sources":["constants.ts","UserCard.tsx","data.ts","context.tsx","AssetAssignmentCard.tsx","AssignmentPane.tsx","UnassignedPane.tsx","App.tsx","index.tsx"],"names":["ItemType","UserCard","user","unassigned","useDrag","type","UnassignedUser","AssignedUser","item","collect","monitor","isDragging","drag","opacity","ref","style","cursor","Card","variant","sx","padding","name","users","id","assets","assignments","userID","assetID","AssignmentContext","createContext","unassignedUsers","assetsWithUsers","updateAssignment","AssignmentProvider","children","useState","defaultData","setAssignments","usersByID","useMemo","keyBy","assignmentsByAssetID","assignmentsByUserID","filter","assignment","map","asset","Provider","value","CardAdapter","forwardRef","highlight","props","DropCard","styled","theme","spacing","palette","action","hover","background","default","transitions","create","EmptyCard","useContext","useDrop","accept","drop","canDrop","AssetAssignmentCard","minWidth","Typography","PaneWrapper","divider","shape","borderRadius","AssignmentPane","Grid","container","wrap","UnassignedPane","backgroundColor","xs","sm","PageWrapper","App","darkTheme","createTheme","mode","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.beef6b56.chunk.js","sourcesContent":["export enum ItemType {\r\n  UnassignedUser = \"UnassignedUser\",\r\n  AssignedUser = \"AssignedUser\",\r\n}\r\n","import { useDrag } from \"react-dnd\";\r\n\r\nimport Card from \"@mui/material/Card\";\r\n\r\nimport { ItemType } from \"./constants\";\r\nimport { User } from \"./types\";\r\n\r\nexport interface UserCardProps {\r\n  user: User;\r\n  unassigned?: boolean;\r\n}\r\n\r\nexport const UserCard = ({ user, unassigned }: UserCardProps) => {\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: unassigned ? ItemType.UnassignedUser : ItemType.AssignedUser,\r\n    item: user,\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  const opacity = isDragging ? 0.4 : 1;\r\n\r\n  return (\r\n    <div ref={drag} style={{ opacity, cursor: \"pointer\" }}>\r\n      <Card variant=\"outlined\" sx={{ padding: 1 }}>\r\n        {user.name}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { Asset, Assignment, User } from \"./types\";\r\n\r\nexport const users: User[] = [\r\n  { id: \"user-1\", name: \"Cahil\" },\r\n  { id: \"user-2\", name: \"Chris\" },\r\n  { id: \"user-3\", name: \"Precious\" },\r\n  { id: \"user-4\", name: \"Brayden\" },\r\n  { id: \"user-5\", name: \"Malek\" },\r\n];\r\n\r\nexport const assets: Asset[] = [\r\n  { id: \"asset-1\", name: \"Asset 1\" },\r\n  { id: \"asset-2\", name: \"Asset 2\" },\r\n  { id: \"asset-3\", name: \"Asset 3\" },\r\n  { id: \"asset-4\", name: \"Asset 4\" },\r\n  { id: \"asset-5\", name: \"Asset 5\" },\r\n];\r\n\r\nexport const assignments: Assignment[] = [\r\n  { id: \"assignment-1\", userID: \"user-1\", assetID: \"asset-1\" },\r\n  { id: \"assignment-2\", userID: \"user-2\", assetID: \"asset-2\" },\r\n  { id: \"assignment-3\", userID: \"user-3\" },\r\n  { id: \"assignment-4\", userID: \"user-4\" },\r\n  { id: \"assignment-5\", userID: \"user-5\" },\r\n];\r\n","import { createContext, useMemo, useState } from \"react\";\r\nimport keyBy from \"lodash/keyBy\";\r\n\r\nimport * as defaultData from \"./data\";\r\nimport { AssetWithUser, Assignment, User } from \"./types\";\r\n\r\nexport interface AssignmentContextValue {\r\n  assignments: Assignment[];\r\n  unassignedUsers: User[];\r\n  assetsWithUsers: AssetWithUser[];\r\n  updateAssignment(userID: string, assetID?: string): void;\r\n}\r\n\r\nexport const AssignmentContext = createContext<AssignmentContextValue>({\r\n  assignments: [],\r\n  unassignedUsers: [],\r\n  assetsWithUsers: [],\r\n  updateAssignment: () => undefined,\r\n});\r\n\r\nexport const AssignmentProvider: React.FC = ({ children }) => {\r\n  const [users] = useState(defaultData.users);\r\n  const [assets] = useState(defaultData.assets);\r\n  const [assignments, setAssignments] = useState(defaultData.assignments);\r\n\r\n  const usersByID = useMemo(() => keyBy(users, \"id\"), [users]);\r\n  const assignmentsByAssetID = useMemo(\r\n    () => keyBy(assignments, \"assetID\"),\r\n    [assignments]\r\n  );\r\n  const assignmentsByUserID = useMemo(\r\n    () => keyBy(assignments, \"userID\"),\r\n    [assignments]\r\n  );\r\n\r\n  const unassignedUsers = useMemo(\r\n    () =>\r\n      users.filter((user) => {\r\n        const assignment = assignmentsByUserID[user.id];\r\n        return !assignment?.assetID;\r\n      }),\r\n    [assignmentsByUserID, users]\r\n  );\r\n\r\n  const assetsWithUsers = useMemo(() => {\r\n    return assets.map<AssetWithUser>((asset) => {\r\n      const assignment = assignmentsByAssetID[asset.id];\r\n      const user = usersByID[assignment?.userID];\r\n      return { ...asset, user };\r\n    });\r\n  }, [assets, assignmentsByAssetID, usersByID]);\r\n\r\n  const updateAssignment = (userID: string, assetID?: string) => {\r\n    setAssignments((assignments) =>\r\n      assignments.map((assignment) => {\r\n        if (assignment.userID === userID) return { ...assignment, assetID };\r\n        return assignment;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AssignmentContext.Provider\r\n      value={{\r\n        assignments,\r\n        unassignedUsers,\r\n        assetsWithUsers,\r\n        updateAssignment,\r\n      }}\r\n    >\r\n      {children}\r\n    </AssignmentContext.Provider>\r\n  );\r\n};\r\n","import { ForwardedRef, forwardRef, useContext } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\n\r\nimport Card, { CardProps } from \"@mui/material/Card\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { ItemType } from \"./constants\";\r\nimport { Asset, AssetWithUser, User } from \"./types\";\r\nimport { UserCard } from \"./UserCard\";\r\nimport { AssignmentContext } from \"./context\";\r\n\r\nconst CardAdapter = forwardRef(\r\n  (\r\n    { highlight, ...props }: CardProps & { highlight: boolean },\r\n    ref: ForwardedRef<HTMLDivElement>\r\n  ) => <Card {...props} ref={ref} />\r\n);\r\n\r\nconst DropCard = styled(CardAdapter)`\r\n  padding: ${({ theme }) => theme.spacing(1)};\r\n  background: ${({ theme, highlight }) =>\r\n    highlight ? theme.palette.action.hover : theme.palette.background.default};\r\n  transition: ${({ theme }) =>\r\n    theme.transitions.create([\"background\", \"opacity\"])};\r\n`;\r\n\r\ninterface EmptyCardProps {\r\n  asset: Asset;\r\n}\r\n\r\nconst EmptyCard = ({ asset }: EmptyCardProps) => {\r\n  const { updateAssignment } = useContext(AssignmentContext);\r\n\r\n  const [{ canDrop }, drop] = useDrop({\r\n    accept: [ItemType.UnassignedUser, ItemType.AssignedUser],\r\n    drop: (item: User) => {\r\n      updateAssignment(item.id, asset.id);\r\n    },\r\n    collect: (monitor) => ({\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  });\r\n\r\n  const opacity = canDrop ? 1 : 0.5;\r\n\r\n  return (\r\n    <DropCard\r\n      ref={drop}\r\n      highlight={canDrop}\r\n      variant=\"outlined\"\r\n      sx={{ padding: 1, opacity }}\r\n    >\r\n      Empty\r\n    </DropCard>\r\n  );\r\n};\r\n\r\nexport interface AssetAssignmentCardProps {\r\n  asset: AssetWithUser;\r\n}\r\n\r\nexport const AssetAssignmentCard = ({ asset }: AssetAssignmentCardProps) => {\r\n  return (\r\n    <div>\r\n      <Card sx={{ padding: 1, minWidth: 150 }}>\r\n        <Typography>{asset.name}</Typography>\r\n        {asset.user ? (\r\n          <UserCard user={asset.user} />\r\n        ) : (\r\n          <EmptyCard asset={asset} />\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport { AssetAssignmentCard } from \"./AssetAssignmentCard\";\r\nimport { AssignmentContext } from \"./context\";\r\n\r\nconst PaneWrapper = styled(\"div\")`\r\n  border: 2px solid ${({ theme }) => theme.palette.divider};\r\n  border-radius: ${({ theme }) => theme.shape.borderRadius}px;\r\n  padding: ${({ theme }) => theme.spacing(2)};\r\n  position: relative;\r\n`;\r\n\r\nexport const AssignmentPane = () => {\r\n  const { assetsWithUsers } = useContext(AssignmentContext);\r\n\r\n  return (\r\n    <PaneWrapper>\r\n      <Grid container spacing={2} wrap=\"wrap\">\r\n        {assetsWithUsers.map((asset) => {\r\n          return (\r\n            <Grid key={asset.id} item>\r\n              <AssetAssignmentCard asset={asset} />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </PaneWrapper>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport { ItemType } from \"./constants\";\r\nimport { AssignmentContext } from \"./context\";\r\nimport { User } from \"./types\";\r\nimport { UserCard } from \"./UserCard\";\r\n\r\nconst PaneWrapper = styled(\"div\")`\r\n  transition: ${({ theme }) => theme.transitions.create(\"background-color\")};\r\n  padding: ${({ theme }) => theme.spacing(2)};\r\n  position: relative;\r\n`;\r\n\r\nexport const UnassignedPane = () => {\r\n  const { unassignedUsers, updateAssignment } = useContext(AssignmentContext);\r\n\r\n  const [{ canDrop }, drop] = useDrop({\r\n    accept: ItemType.AssignedUser,\r\n    drop: (item: User) => {\r\n      updateAssignment(item.id);\r\n    },\r\n    collect: (monitor) => ({\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <PaneWrapper\r\n      ref={drop}\r\n      sx={{\r\n        backgroundColor: canDrop ? \"action.hover\" : \"background.default\",\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        {unassignedUsers.map((user) => {\r\n          return (\r\n            <Grid key={user.id} item xs={12} sm={6}>\r\n              <UserCard user={user} unassigned />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </PaneWrapper>\r\n  );\r\n};\r\n","import { styled } from \"@mui/material/styles\";\nimport { AssignmentPane } from \"./AssignmentPane\";\nimport { UnassignedPane } from \"./UnassignedPane\";\nimport { AssignmentProvider } from \"./context\";\n\nconst PageWrapper = styled(\"div\")`\n  position: fixed;\n  height: 100vh;\n  width: 100vw;\n  top: 0;\n  left: 0;\n  display: grid;\n  grid-template-columns: 75% 25%;\n`;\n\nfunction App() {\n  return (\n    <AssignmentProvider>\n      <PageWrapper>\n        <AssignmentPane />\n        <UnassignedPane />\n      </PageWrapper>\n    </AssignmentProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport App from \"./App\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <DndProvider backend={HTML5Backend}>\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </DndProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}